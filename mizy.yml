---
- name: Mizy RPI server setup
  hosts: localhost
  connection: local

  become: true

  vars:
    local_mizy_user: pi

  # vars_files:
  #   - vars/main_vars.yml

  handlers:
    - name: Restart smbd
      ansible.builtin.service:
        name: smbd
        state: restarted

  tasks:
    # FEW BASIC THINGS
    - name: Set timezone (to Europe/Prague)
      community.general.timezone:
        name: Europe/Prague

    - name: Enable color prompt ~/.bashrc
      ansible.builtin.lineinfile:
        dest: "/home/{{ local_mizy_user }}/.bashrc"
        regexp: '^#\s*force_color_prompt.*$'
        line: 'force_color_prompt=yes'

    - name: Update APT cache
      ansible.builtin.apt:
        update_cache: true

    - name: Install basic packages
      ansible.builtin.package:
        name:
          - vim
          - mc
          - ack
          - python3-pip
          - git
        state: present

    # DOCKER
    - name: Remove bad/old stuff before installing Docker
      ansible.builtin.package:
        name:
          - docker
          - docker-engine
          - docker.io
          - containerd
          - runc
        state: absent

    - name: Install required packages for Docker
      ansible.builtin.package:
        name:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
          - apt-transport-https
        state: present

    - name: Add Docker signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        keyring: /etc/apt/trusted.gpg.d/docker.gpg
        state: present

    - name: Add Docker repository into sources list
      ansible.builtin.apt_repository:
        repo: >-
          deb [arch=arm64 signed-by=/etc/apt/trusted.gpg.d/docker.gpg]
          https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-compose-plugin
        state: present

    - name: Add user to docker group
      ansible.builtin.user:
        name: "{{ local_mizy_user }}"
        groups: docker
        append: true

    - name: Set ip forwarding on in /proc and in the sysctl file and reload if necessary
      ansible.posix.sysctl:
        name: net.ipv4.ip_forward
        value: '1'
        sysctl_set: true
        state: present
        reload: true

    - name: Enable Docker service to start at boot with systemctl
      ansible.builtin.systemd:
        name: docker
        state: started
        enabled: true

    # Samba
    - name: Create directory ~/share
      ansible.builtin.file:
        path: "/home/{{ local_mizy_user }}/share"
        state: directory
        mode: '1777'

    - name: Install Samba packages
      ansible.builtin.package:
        name:
          - samba
          - samba-common-bin
        state: present

    - name: Ensure Samba is running and set to start on boot
      ansible.builtin.service:
        name: smbd
        state: started
        enabled: true

    - name: Add Samba configuration
      ansible.builtin.blockinfile:
        path: /etc/samba/smb.conf
        block: |
          [share]
          Comment = pi shared folder
          Path = /home/pi/share
          Browseable = yes
          Writeable = yes
          only guest = no
          create mask = 0777
          directory mask = 0777
          Public = yes
      notify:
        - Restart smbd

    - name: Create Samba Password for User pi
      ansible.builtin.shell: "set -o pipefail && (echo pi; echo pi) | smbpasswd -s -a pi"
      notify:
        - Restart smbd

    # FoundryVTT
    - name: Create directory ~/docker/foundryvtt
      ansible.builtin.file:
        path: "/home/{{ local_mizy_user }}/docker/foundryvtt"
        state: directory
        mode: '0755'

    - name: Create directory ~/share/foundrydata
      ansible.builtin.file:
        path: "/home/{{ local_mizy_user }}/share/foundrydata"
        state: directory
        mode: '0777'

    - name: Copy docker-compose file
      ansible.builtin.copy:
        src: docker-compose.yml
        dest: "/home/{{ local_mizy_user }}/docker/foundryvtt/docker-compose.yml"
        owner: "{{ local_mizy_user }}"
        group: "{{ local_mizy_user }}"
        mode: '0755'

    # - name: Deploy FoundryVTT docker compose stack
    #   community.docker.docker_compose:
    #     project_src: "/home/{{ local_mizy_user }}/docker/foundryvtt"
    #     files:
    #       - docker-compose.yml

    # UFW
    - name: Install UFW firewall
      ansible.builtin.package:
        name:
          - ufw
        state: present

    - name: Limit SSH rule
      community.general.ufw:
        rule: limit
        port: ssh
        proto: tcp

    - name: Allow all access to tcp port 80,443,30000,139,445
      community.general.ufw:
        rule: "allow"
        port: "{{ item }}"
        proto: "tcp"
      with_items:
        - "80"
        - "443"
        - "30000"
        - "139"
        - "445"

    - name: Allow everything and enable UFW
      community.general.ufw:
        state: enabled
